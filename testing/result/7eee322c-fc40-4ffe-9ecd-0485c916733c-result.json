{"name": "test_mul[failed]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 1.0 == 0.1\n  +1.0\n  -0.1", "trace": "self = <testing.test_calc_new.TestCalc object at 0x7fb5dff83910>, get_calc = <python_code.calc.Calculator object at 0x7fb5dff20340>\nget_mul = [2, 0.5, 0.1]\n\n    @allure.story('测试乘法')\n    @pytest.mark.run(order=3)\n    def test_mul(self, get_calc, get_mul):\n        # 调用mul方法\n        with allure.step('计算两个数的之积'):\n            result = get_calc.mul(get_mul[0], get_mul[1])\n        # 判断如果结果为浮点数，保留两位小数\n        if isinstance(result, float):\n            result = round(result, 2)\n        # 得到结果后，设置断言\n>       assert result == get_mul[2]\nE       assert 1.0 == 0.1\nE         +1.0\nE         -0.1\n\ntest_calc_new.py:89: AssertionError"}, "steps": [{"name": "计算两个数的之积", "status": "passed", "start": 1612272394646, "stop": 1612272394646}], "parameters": [{"name": "get_mul", "value": "[2, 0.5, 0.1]"}], "start": 1612272394646, "stop": 1612272394647, "uuid": "cf08d4de-4690-44ae-a923-402fc417ec23", "historyId": "abd4f643d0ae256885c228dcca2e70bd", "testCaseId": "fe6bda14bd0e8d9a8af1eb7bd6c20851", "fullName": "test_calc_new.TestCalc#test_mul", "labels": [{"name": "story", "value": "测试乘法"}, {"name": "feature", "value": "测试计算器"}, {"name": "tag", "value": "run(order=3)"}, {"name": "suite", "value": "test_calc_new"}, {"name": "subSuite", "value": "TestCalc"}, {"name": "host", "value": "zhangchnxudeMBP.lan"}, {"name": "thread", "value": "8501-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_calc_new"}]}